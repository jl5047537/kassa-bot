"""
–ú–æ–¥—É–ª—å –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–æ–≤ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π.
–°–æ–¥–µ—Ä–∂–∏—Ç –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –∫–æ–º–∞–Ω–¥ –∏ —Å–æ–æ–±—â–µ–Ω–∏–π –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π.
"""

import logging
import hashlib
from aiogram import types, Dispatcher
from aiogram.dispatcher import FSMContext
from typing import Optional

from ..core.config import settings
from ..keyboards.base import get_main_keyboard, get_registration_keyboard, get_admin_keyboard
from ..utils.validators import validate_field

logger = logging.getLogger(__name__)

def get_referral_id(phone_number: Optional[str]) -> str:
    """
    –ì–µ–Ω–µ—Ä–∏—Ä—É–µ—Ç referral ID –Ω–∞ –æ—Å–Ω–æ–≤–µ –Ω–æ–º–µ—Ä–∞ —Ç–µ–ª–µ—Ñ–æ–Ω–∞.
    
    Args:
        phone_number: –ù–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞
        
    Returns:
        str: Referral ID
    """
    if not phone_number:
        return "–Ω–µ—Ç –¥–∞–Ω–Ω—ã—Ö"
    phone_bytes = phone_number.encode('utf-8')
    hash_object = hashlib.md5(phone_bytes)
    hash_hex = hash_object.hexdigest()
    return hash_hex[:8]

async def cmd_start(message: types.Message, state: FSMContext) -> None:
    """
    –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /start.
    
    Args:
        message: –û–±—ä–µ–∫—Ç —Å–æ–æ–±—â–µ–Ω–∏—è
        state: –°–æ—Å—Ç–æ—è–Ω–∏–µ FSM
    """
    user_id = str(message.from_user.id)
    username = message.from_user.username
    
    logger.info(f"User started bot: id={user_id}, username={username}")
    
    # –°–æ—Ö—Ä–∞–Ω—è–µ–º —Ä–µ—Ñ–µ—Ä–∞–ª—å–Ω—ã–π ID –µ—Å–ª–∏ –æ–Ω –µ—Å—Ç—å
    args = message.get_args()
    if args:
        await state.update_data(referrer_id=args)
        logger.info(f"Saved referrer_id: {args} for user {user_id}")
    
    # –î–ª—è –≤—Å–µ—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –ø–æ–∫–∞–∑—ã–≤–∞–µ–º –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–∏–µ –∏ –∫–Ω–æ–ø–∫—É —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏
    await message.answer(
        "üöÄ *–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å!*\n"
        "–¢–≤–æ–π –ø—É—Ç—å –∫ —Ñ–∏–Ω–∞–Ω—Å–æ–≤–æ–π —Å–≤–æ–±–æ–¥–µ –Ω–∞—á–∏–Ω–∞–µ—Ç—Å—è –∑–¥–µ—Å—å!\n"
        "–ü—Ä–æ–π–¥–∏ –∫–æ—Ä–æ—Ç–∫—É—é —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—é –≤ –Ω–∞—à–µ–π *–ö–∞—Å—Å–µ –í–∑–∞–∏–º–æ–ø–æ–º–æ—â–∏* –∏ –Ω–∞—á–Ω–∏ —Å—Ç—Ä–æ–∏—Ç—å —Å–≤–æ—ë —É–≤–µ—Ä–µ–Ω–Ω–æ–µ –±—É–¥—É—â–µ–µ —É–∂–µ —Å–µ–≥–æ–¥–Ω—è. üî•\n"
        "–ì–æ—Ç–æ–≤? –ñ–º–∏ –∫–Ω–æ–ø–∫—É –Ω–∏–∂–µ! üëá",
        parse_mode="Markdown",
        reply_markup=get_registration_keyboard()
    )
    
    # –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ –æ–∂–∏–¥–∞–Ω–∏—è –∫–æ–Ω—Ç–∞–∫—Ç–∞
    await state.set_state("waiting_for_phone")

async def handle_contact(message: types.Message, state: FSMContext) -> None:
    """
    –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –ø–æ–ª—É—á–µ–Ω–∏—è –∫–æ–Ω—Ç–∞–∫—Ç–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è.
    
    Args:
        message: –û–±—ä–µ–∫—Ç —Å–æ–æ–±—â–µ–Ω–∏—è
        state: –°–æ—Å—Ç–æ—è–Ω–∏–µ FSM
    """
    user_id = str(message.from_user.id)
    contact = message.contact
    
    logger.info(f"Received contact from user {user_id}: {contact.phone_number}")
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —è–≤–ª—è–µ—Ç—Å—è –ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –≥–ª–∞–≤–Ω—ã–º –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–º
    if int(user_id) == settings.MAIN_ADMIN_ID:
        # –î–ª—è –≥–ª–∞–≤–Ω–æ–≥–æ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞ –ø–æ–∫–∞–∑—ã–≤–∞–µ–º –ø–∞–Ω–µ–ª—å –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞
        keyboard = get_admin_keyboard()
        await message.answer(
            "üåü *–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ —Ü–µ–Ω—Ç—Ä —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è —É—Å–ø–µ—Ö–æ–º!* üåü\n\n"
            "*–ù–∞—à –ë–æ–∂–µ—Å—Ç–≤–µ–Ω–Ω—ã–π –ê–¥–º–∏–Ω*, –≤–∞—à–∞ —ç–Ω–µ—Ä–≥–∏—è –∏ –ª–∏–¥–µ—Ä—Å—Ç–≤–æ ‚Äî –Ω–∞—Å—Ç–æ—è—â–∏–π –¥–≤–∏–≥–∞—Ç–µ–ª—å —ç—Ç–æ–≥–æ –ø—Ä–æ–µ–∫—Ç–∞! üöÄ\n"
            "–í—ã –Ω–µ –ø—Ä–æ—Å—Ç–æ —É–ø—Ä–∞–≤–ª—è–µ—Ç–µ –ø—Ä–æ—Ü–µ—Å—Å–∞–º–∏ ‚Äî –≤—ã –≤–¥–æ—Ö–Ω–æ–≤–ª—è–µ—Ç–µ!\n\n"
            "*–°–µ–≥–æ–¥–Ω—è —Å–Ω–æ–≤–∞ –≤–∞—à –¥–µ–Ω—å —Ç–≤–æ—Ä–∏—Ç—å –≤–µ–ª–∏–∫–∏–µ –ø–µ—Ä–µ–º–µ–Ω—ã!* üî•",
            parse_mode="Markdown",
            reply_markup=keyboard
        )
    else:
        # –î–ª—è –æ–±—ã—á–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –ø–æ–∫–∞–∑—ã–≤–∞–µ–º –æ—Å–Ω–æ–≤–Ω–æ–µ –º–µ–Ω—é
        keyboard = get_main_keyboard(user_id)
        await message.answer(
            "‚úÖ –†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è —É—Å–ø–µ—à–Ω–æ –∑–∞–≤–µ—Ä—à–µ–Ω–∞!\n\n"
            "–¢–µ–ø–µ—Ä—å –≤—ã –º–æ–∂–µ—Ç–µ:\n"
            "‚Ä¢ –ü—Ä–∏–≥–ª–∞—à–∞—Ç—å –¥—Ä—É–∑–µ–π\n"
            "‚Ä¢ –ü—Ä–æ—Å–º–∞—Ç—Ä–∏–≤–∞—Ç—å —Å–≤–æ–π –ø—Ä–æ—Ñ–∏–ª—å\n"
            "‚Ä¢ –ü–æ–ª—É—á–∞—Ç—å –ø–æ–º–æ—â—å\n\n"
            "–í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ:",
            parse_mode="Markdown",
            reply_markup=keyboard
        )
    
    # –°–±—Ä–∞—Å—ã–≤–∞–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ
    await state.finish()

async def show_profile(message: types.Message) -> None:
    """
    –ü–æ–∫–∞–∑—ã–≤–∞–µ—Ç –ø—Ä–æ—Ñ–∏–ª—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è.
    
    Args:
        message: –û–±—ä–µ–∫—Ç —Å–æ–æ–±—â–µ–Ω–∏—è
    """
    # TODO: –ü–æ–ª—É—á–∏—Ç—å –¥–∞–Ω–Ω—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∏–∑ –ë–î
    user = None  # –í—Ä–µ–º–µ–Ω–Ω–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ
    if not user:
        await message.answer(
            "–î–ª—è –Ω–∞—á–∞–ª–∞ —Ä–∞–±–æ—Ç—ã –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä—É–π—Ç–µ—Å—å:",
            reply_markup=get_registration_keyboard()
        )
        return
    
    ref_id = get_referral_id(user.get('phone_number'))
    referrals_count = 0  # TODO: –ü–æ–ª—É—á–∏—Ç—å –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —Ä–µ—Ñ–µ—Ä–∞–ª–æ–≤
    
    # –§–æ—Ä–º–∏—Ä—É–µ–º —Ç–µ–∫—Å—Ç —Å —É—Ä–æ–≤–Ω—è–º–∏ –∏ –ø—Ä–æ–≥—Ä–µ—Å—Å–æ–º
    levels_text = ""
    
    # –ò—Å–ø–æ–ª—å–∑—É–µ–º –Ω–æ–≤—É—é —Å—Ç—Ä—É–∫—Ç—É—Ä—É —É—Ä–æ–≤–Ω–µ–π –∏–∑ –Ω–∞—Å—Ç—Ä–æ–µ–∫
    level_requirements = {
        1: settings.LEVEL_1_REQUIREMENT,
        2: settings.LEVEL_2_REQUIREMENT,
        3: settings.LEVEL_3_REQUIREMENT
    }
    
    current_level = user.get('level', 0)
    for level, required_referrals in level_requirements.items():
        is_current = level == current_level
        is_completed = level < current_level
        is_locked = level > current_level
        
        level_emoji = "‚úÖ" if is_completed else "üîí" if is_locked else "üèÜ" if is_current else "üèÉ"
        level_status = " (–¢–µ–∫—É—â–∏–π)" if is_current else " (–ó–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω)" if is_locked else " (–ó–∞–≤–µ—Ä—à–µ–Ω)" if is_completed else ""
        
        progress = f"{referrals_count}/{required_referrals}" if not is_completed else "‚úÖ"
        
        levels_text += f"{level_emoji} {level} —É—Ä–æ–≤–µ–Ω—å {level_status} - {progress}\n"
    
    profile_text = (
        f"üë§ *–í–∞—à –ø—Ä–æ—Ñ–∏–ª—å*\n\n"
        f"üì± –¢–µ–ª–µ—Ñ–æ–Ω: {user.get('phone_number', '–Ω–µ —É–∫–∞–∑–∞–Ω')}\n"
        f"üÜî –í–∞—à referral ID: *{ref_id}*\n"
        f"üë• –ü—Ä–∏–≥–ª–∞—à–µ–Ω–æ –¥—Ä—É–∑–µ–π: *{referrals_count}*\n\n"
        f"*–£—Ä–æ–≤–Ω–∏:*\n{levels_text}"
    )
    
    await message.answer(profile_text, parse_mode="Markdown")

async def show_rules(message: types.Message) -> None:
    """
    –ü–æ–∫–∞–∑—ã–≤–∞–µ—Ç –ø—Ä–∞–≤–∏–ª–∞ —Å–∏—Å—Ç–µ–º—ã.
    
    Args:
        message: –û–±—ä–µ–∫—Ç —Å–æ–æ–±—â–µ–Ω–∏—è
    """
    rules_text = (
        "üìú *–ü—Ä–∞–≤–∏–ª–∞ –ö–∞—Å—Å—ã –í–∑–∞–∏–º–æ–ø–æ–º–æ—â–∏*\n\n"
        "1. *–†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è*\n"
        "   ‚Ä¢ –†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è –æ–±—è–∑–∞—Ç–µ–ª—å–Ω–∞ –¥–ª—è –≤—Å–µ—Ö —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤\n"
        "   ‚Ä¢ –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ —Ç–æ–ª—å–∫–æ —Ä–µ–∞–ª—å–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ\n"
        "   ‚Ä¢ –û–¥–∏–Ω —á–µ–ª–æ–≤–µ–∫ - –æ–¥–∏–Ω –∞–∫–∫–∞—É–Ω—Ç\n\n"
        "2. *–†–µ—Ñ–µ—Ä–∞–ª—å–Ω–∞—è —Å–∏—Å—Ç–µ–º–∞*\n"
        "   ‚Ä¢ –ü—Ä–∏–≥–ª–∞—à–∞–π—Ç–µ –¥—Ä—É–∑–µ–π —á–µ—Ä–µ–∑ —Å–≤–æ–π —Ä–µ—Ñ–µ—Ä–∞–ª—å–Ω—ã–π ID\n"
        "   ‚Ä¢ –ó–∞ –∫–∞–∂–¥–æ–≥–æ –ø—Ä–∏–≥–ª–∞—à–µ–Ω–Ω–æ–≥–æ –ø–æ–ª—É—á–∞–π—Ç–µ –±–æ–Ω—É—Å—ã\n"
        "   ‚Ä¢ –ù–µ –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ –Ω–∞–∫—Ä—É—Ç–∫—É —Ä–µ—Ñ–µ—Ä–∞–ª–æ–≤\n\n"
        "3. *–£—Ä–æ–≤–Ω–∏*\n"
        "   ‚Ä¢ –£—Ä–æ–≤–µ–Ω—å –ø–æ–≤—ã—à–∞–µ—Ç—Å—è –ø—Ä–∏ –¥–æ—Å—Ç–∏–∂–µ–Ω–∏–∏ –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–Ω–æ–≥–æ –∫–æ–ª–∏—á–µ—Å—Ç–≤–∞ —Ä–µ—Ñ–µ—Ä–∞–ª–æ–≤\n"
        "   ‚Ä¢ –ß–µ–º –≤—ã—à–µ —É—Ä–æ–≤–µ–Ω—å - —Ç–µ–º –±–æ–ª—å—à–µ –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç–µ–π\n"
        "   ‚Ä¢ –£—Ä–æ–≤–Ω–∏ –Ω–µ–ª—å–∑—è –ø–µ—Ä–µ–¥–∞–≤–∞—Ç—å –∏–ª–∏ –ø—Ä–æ–¥–∞–≤–∞—Ç—å\n\n"
        "4. *–û–±—â–µ–Ω–∏–µ*\n"
        "   ‚Ä¢ –£–≤–∞–∂–∞–π—Ç–µ –¥—Ä—É–≥–∏—Ö —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤\n"
        "   ‚Ä¢ –ù–µ —Å–ø–∞–º—å—Ç–µ –∏ –Ω–µ —Ñ–ª—É–¥–∏—Ç–µ\n"
        "   ‚Ä¢ –°–æ–±–ª—é–¥–∞–π—Ç–µ –ø—Ä–∞–≤–∏–ª–∞ —á–∞—Ç–∞\n\n"
        "5. *–ë–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç—å*\n"
        "   ‚Ä¢ –ù–µ –ø–µ—Ä–µ–¥–∞–≤–∞–π—Ç–µ —Å–≤–æ–∏ –¥–∞–Ω–Ω—ã–µ —Ç—Ä–µ—Ç—å–∏–º –ª–∏—Ü–∞–º\n"
        "   ‚Ä¢ –°–æ–æ–±—â–∞–π—Ç–µ –æ –ø–æ–¥–æ–∑—Ä–∏—Ç–µ–ª—å–Ω–æ–π –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏\n"
        "   ‚Ä¢ –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ —Ç–æ–ª—å–∫–æ –æ—Ñ–∏—Ü–∏–∞–ª—å–Ω—ã–µ –∫–∞–Ω–∞–ª—ã —Å–≤—è–∑–∏"
    )
    await message.answer(rules_text, parse_mode="Markdown")

async def show_help(message: types.Message) -> None:
    """
    –ü–æ–∫–∞–∑—ã–≤–∞–µ—Ç —Å–ø—Ä–∞–≤–æ—á–Ω—É—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é.
    
    Args:
        message: –û–±—ä–µ–∫—Ç —Å–æ–æ–±—â–µ–Ω–∏—è
    """
    help_text = (
        "üåü *–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ –ö–∞—Å—Å—É –í–∑–∞–∏–º–æ–ø–æ–º–æ—â–∏!*\n\n"
        "*–û—Å–Ω–æ–≤–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã:*\n"
        "‚Ä¢ /start - –ù–∞—á–∞—Ç—å —Ä–∞–±–æ—Ç—É —Å –±–æ—Ç–æ–º\n"
        "‚Ä¢ /profile - –ü–æ–∫–∞–∑–∞—Ç—å –≤–∞—à –ø—Ä–æ—Ñ–∏–ª—å\n"
        "‚Ä¢ /help - –ü–æ–∫–∞–∑–∞—Ç—å —ç—Ç—É —Å–ø—Ä–∞–≤–∫—É\n\n"
        "*–ö–∞–∫ —ç—Ç–æ —Ä–∞–±–æ—Ç–∞–µ—Ç:*\n"
        "1. –ó–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä—É–π—Ç–µ—Å—å, —É–∫–∞–∑–∞–≤ —Å–≤–æ–π –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞\n"
        "2. –ü–æ–ª—É—á–∏—Ç–µ —Å–≤–æ–π —É–Ω–∏–∫–∞–ª—å–Ω—ã–π —Ä–µ—Ñ–µ—Ä–∞–ª—å–Ω—ã–π ID\n"
        "3. –ü—Ä–∏–≥–ª–∞—à–∞–π—Ç–µ –¥—Ä—É–∑–µ–π –∏ –ø–æ–≤—ã—à–∞–π—Ç–µ —Å–≤–æ–π —É—Ä–æ–≤–µ–Ω—å\n"
        "4. –ß–µ–º –≤—ã—à–µ —É—Ä–æ–≤–µ–Ω—å - —Ç–µ–º –±–æ–ª—å—à–µ –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç–µ–π!\n\n"
        "*–£—Ä–æ–≤–Ω–∏ –∏ —Ç—Ä–µ–±–æ–≤–∞–Ω–∏—è:*\n"
        f"‚Ä¢ –£—Ä–æ–≤–µ–Ω—å 1: {settings.LEVEL_1_REQUIREMENT} —Ä–µ—Ñ–µ—Ä–∞–ª–æ–≤\n"
        f"‚Ä¢ –£—Ä–æ–≤–µ–Ω—å 2: {settings.LEVEL_2_REQUIREMENT} —Ä–µ—Ñ–µ—Ä–∞–ª–æ–≤\n"
        f"‚Ä¢ –£—Ä–æ–≤–µ–Ω—å 3: {settings.LEVEL_3_REQUIREMENT} —Ä–µ—Ñ–µ—Ä–∞–ª–æ–≤\n\n"
        "–ü–æ –≤—Å–µ–º –≤–æ–ø—Ä–æ—Å–∞–º –æ–±—Ä–∞—â–∞–π—Ç–µ—Å—å –∫ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—É."
    )
    await message.answer(help_text, parse_mode="Markdown")

def register_user_handlers(dp: Dispatcher) -> None:
    """
    –†–µ–≥–∏—Å—Ç—Ä–∏—Ä—É–µ—Ç –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π.
    
    Args:
        dp: –î–∏—Å–ø–µ—Ç—á–µ—Ä –±–æ—Ç–∞
    """
    # –†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–æ–≤ –∫–æ–º–∞–Ω–¥
    dp.register_message_handler(cmd_start, commands=["start"], state="*")
    dp.register_message_handler(handle_contact, content_types=["contact"], state="waiting_for_phone")
    dp.register_message_handler(show_profile, commands=["profile"])
    dp.register_message_handler(show_profile, lambda msg: msg.text == "üë§ –ü—Ä–æ—Ñ–∏–ª—å")
    dp.register_message_handler(show_help, commands=["help"])
    dp.register_message_handler(show_help, lambda msg: msg.text == "‚ùì –ü–æ–º–æ—â—å") 