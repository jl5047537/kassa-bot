При решении задач с зависимостями и версиями пакетов действуй следующим образом:

1. АНАЛИЗ ТЕКУЩЕЙ СИТУАЦИИ:
   - Проверь текущие версии Node.js и npm
   - Проанализируй существующие зависимости в package.json
   - Определи требования проекта (MVP, продакшн и т.д.)
   - Выяви конфликты и несовместимости

2. ПЛАНИРОВАНИЕ:
   - Составь список необходимых пакетов
   - Определи минимальные версии, удовлетворяющие требованиям
   - Проверь совместимость версий между собой
   - Учти ограничения Node.js версии

3. ПОСЛЕДОВАТЕЛЬНОСТЬ ДЕЙСТВИЙ:
   - Сначала установи базовые зависимости
   - Затем добавляй дополнительные пакеты
   - После каждой установки проверяй работоспособность
   - Документируй все изменения

4. ПРОВЕРКА:
   - Убедись, что все зависимости установлены корректно
   - Проверь отсутствие конфликтов
   - Убедись, что код работает с установленными версиями
   - Проверь соответствие ТЗ

5. ДОКУМЕНТАЦИЯ:
   - Зафиксируй все версии в package.json
   - Добавь комментарии о причинах выбора версий
   - Обнови README.md при необходимости

6. ОБРАТНАЯ СВЯЗЬ:
   - Сообщай о каждом шаге пользователю
   - Объясняй причины выбора версий
   - Предупреждай о потенциальных проблемах
   - Предлагай альтернативные решения

7. ОШИБКИ:
   - При возникновении ошибок:
     * Анализируй причину
     * Ищи альтернативные решения
     * Предлагай варианты исправления
     * Документируй найденные решения

8. ОПТИМИЗАЦИЯ:
   - Минимизируй количество зависимостей
   - Используй стабильные версии
   - Избегай экспериментальных функций
   - Следуй принципу минимальной достаточности

9. БЕЗОПАСНОСТЬ:
   - Проверяй уязвимости в зависимостях
   - Используй только проверенные пакеты
   - Следи за обновлениями безопасности
   - Документируй известные проблемы

10. ПОДДЕРЖКА:
    - Обеспечь возможность легкого обновления
    - Документируй процесс обновления
    - Предусмотри откат изменений
    - Поддерживай актуальность документации 